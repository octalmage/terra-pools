{"version":3,"sources":["abbreviate.js","App.js","reportWebVitals.js","index.js"],"names":["annotate","number","maxPlaces","forcePlaces","abbr","rounded","RegExp","test","toFixed","Number","colors","App","useState","isAnimation","setIsAnimation","config","setConfig","data","scale","slippage","lcd","useLCDClient","url","useEffect","fetchPools","a","market","poolDelta","delta","parameters","base_pool","microTerraSide","plus","micraLunaSide","pow","div","terraSide","times","toNumber","lunaSide","swapRate","Coin","terraSwapRate","oracle","exchangeRate","perfectSwapRate","amount","name","amt","t","setInterval","clearTimeout","Chart","React","memo","BarChart","style","marginTop","width","height","Bar","isAnimationActive","onAnimationEnd","label","dataKey","map","entry","index","Cell","fill","LabelList","position","formatter","item","forceLetter","ReferenceLine","isFront","value","y","stroke","YAxis","hide","type","ticks","interval","domain","className","textAlign","marginLeft","marginRight","maxWidth","lineHeight","fontWeight","fontSize","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getChainOptions","chainOptions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c0b966b.chunk.js","sourcesContent":["// https://stackoverflow.com/a/18154846\nexport default function abbreviate(number, maxPlaces, forcePlaces, forceLetter) {\n  number = Number(number)\n  forceLetter = forceLetter || false\n  if(forceLetter !== false) {\n    return annotate(number, maxPlaces, forcePlaces, forceLetter)\n  }\n  var abbr\n  if(number >= 1e12) {\n    abbr = 'T'\n  }\n  else if(number >= 1e9) {\n    abbr = 'B'\n  }\n  else if(number >= 1e6) {\n    abbr = 'M'\n  }\n  else if(number >= 1e3) {\n    abbr = 'K'\n  }\n  else {\n    abbr = ''\n  }\n  return annotate(number, maxPlaces, forcePlaces, abbr)\n}\n\nfunction annotate(number, maxPlaces, forcePlaces, abbr) {\n  // set places to false to not round\n  var rounded = 0\n  switch(abbr) {\n    case 'T':\n      rounded = number / 1e12\n      break\n    case 'B':\n      rounded = number / 1e9\n      break\n    case 'M':\n      rounded = number / 1e6\n      break\n    case 'K':\n      rounded = number / 1e3\n      break\n    case '':\n      rounded = number\n      break\n  }\n  if(maxPlaces !== false) {\n    var test = new RegExp('\\\\.\\\\d{' + (maxPlaces + 1) + ',}$')\n    if(test.test(('' + rounded))) {\n      rounded = rounded.toFixed(maxPlaces)\n    }\n  }\n  if(forcePlaces !== false) {\n    rounded = Number(rounded).toFixed(forcePlaces)\n  }\n  return rounded + abbr\n}","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { useLCDClient } from \"@terra-money/wallet-provider\";\nimport { Coin } from \"@terra-money/terra.js\";\nimport React from \"react\";\nimport { BarChart, Bar, Cell, YAxis, ReferenceLine, LabelList } from \"recharts\";\nimport abbreviate from \"./abbreviate\";\n\nconst colors = [\"#0088FE\", \"#FFBB28\"];\n\nfunction App() {\n  const [isAnimation, setIsAnimation] = useState(true);\n  const [config, setConfig] = useState([[], [49000000, 51000000], 0]);\n\n  const [data, scale, slippage] = config;\n  const lcd = useLCDClient({ url: 'https://solitary-wild-log.terra-mainnet.quiknode.pro/e29ad894ff7e7809f2a3fbfa8fd658e94eb67cdf' });\n\n  useEffect(() => {\n    const fetchPools = async () => {\n      const delta = await lcd.market.poolDelta();\n      const { base_pool } = await lcd.market.parameters();\n      const microTerraSide = base_pool.plus(delta);\n      const micraLunaSide = base_pool.pow(2).div(microTerraSide);\n\n      const terraSide = microTerraSide.times(0.000001).toNumber();\n      const lunaSide = micraLunaSide.times(0.000001).toNumber();\n\n      let scale = [49000000, 51000000];\n\n      if (terraSide < 49000000 || lunaSide < 49000000) {\n        scale = [40000000, 59000000];\n      }\n\n      const terraSwapRate = await lcd.market.swapRate(new Coin('uusd', 1000000000), 'uluna');\n      const exchangeRate = await lcd.oracle.exchangeRate('uusd');\n      // Expect Luna returned if there was no fee, based on oracle price.\n      const perfectSwapRate = 1000 / exchangeRate.amount.toNumber();\n      \n      setConfig([\n        [\n          {\n            name: \"Stablecoins\",\n            amt: terraSide,\n          },\n          {\n            name: \"LUNA\",\n            amt: lunaSide,\n          },\n        ],\n        scale,\n        100 - (terraSwapRate.amount.times(0.000001).toNumber() / perfectSwapRate) * 100,\n      ]);\n    };\n\n    fetchPools();\n    const t = setInterval(fetchPools, 7000);\n    return () => {\n      clearTimeout(t);\n    };\n  }, [lcd.market, lcd.oracle]);\n\n  const Chart = React.memo(() => (\n    <BarChart\n      style={{ marginTop: \"-100px\" }}\n      width={800}\n      height={400}\n      data={data}\n    >\n      <Bar\n        isAnimationActive={isAnimation}\n        onAnimationEnd={() => setIsAnimation(false)}\n        label={false}\n        dataKey=\"amt\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n        ))}\n        <LabelList dataKey=\"name\" position=\"top\" fill=\"#000\" />\n        <LabelList\n          formatter={(item) => abbreviate(item, 3, 3, \"M\")}\n          dataKey=\"amt\"\n          position=\"inside\"\n          fill=\"#000000\"\n        />\n      </Bar>\n      <ReferenceLine\n        isFront={false}\n        label={{ position: \"top\", value: \"BasePool\" }}\n        y={50000000}\n        stroke=\"#000\"\n      />\n      <YAxis\n        hide\n        type=\"number\"\n        ticks={10}\n        stroke=\"#000000\"\n        interval={0}\n        domain={scale}\n      />\n    </BarChart>\n  ));\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        textAlign: \"left\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        maxWidth: 800,\n      }}\n    >\n      <h2 style={{ lineHeight: \"1rem\" }}>\n        Relationship between Luna / Terra Stable assets in the Market module<br />\n        <span style={{ fontWeight: \"normal\", fontSize: \"16px\" }}>\n          (live view, updated every block):{\" \"}\n        </span>\n      </h2>\n\n      <Chart />\n\n      <hr />\n\n      {/* <ul>\n        <li>\n          The Market module enables atomic swaps between different Terra\n          stablecoin denominations and Luna. This module ensures an available,\n          liquid market, stable prices, and fair exchange rates between the\n          protocolâ€™s assets.\n        </li>\n\n        <li>Terra uses a Constant Product market-making algorithm to ensure\n        liquidity for Terra&lt;&gt;Luna swaps.</li>\n        <li>\n          The market starts out with two liquidity pools of equal sizes (BasePool above), one\n          representing all denominations of Terra and another representing Luna.\n        </li>\n        <li>\n          At the end of each block the market module attempts to replenish the\n          pools by decreasing the magnitude of the delta between the Terra and\n          Luna pools.\n        </li>\n        <li>\n          This mechanism ensures liquidity and acts as a low-pass filter,\n          allowing for the spread fee to drop back down when there is a change\n          in demand, causing a necessary change in supply which needs to be\n          absorbed.\n        </li>\n      </ul>\n      <p>\n        Pool values above are displayed in{\" \"}\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href=\"https://docs.terra.money/docs/learn/glossary.html#sdr\"\n        >\n          TerraSDR\n        </a>\n        .\n      </p>\n      <p>\n        <b>\n          This is a very high level overview. Visit the{\" \"}\n          <a\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://docs.terra.money/docs/develop/module-specifications/spec-market.html\"\n          >\n            \n          </a>{\" \"}\n          on the market module for more information.\n        </b>\n      </p> */}\n      <p>Estimated fee for a 1000 UST to Luna swap: {slippage.toFixed(2)}%</p>\n      <p>Learn more: <a href=\"https://docs.terra.money/docs/develop/module-specifications/spec-market.html\">Terra docs on the Market module.</a></p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { getChainOptions, WalletProvider } from '@terra-money/wallet-provider'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\ngetChainOptions().then((chainOptions) => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <WalletProvider {...chainOptions}>\n        <App />\n      </WalletProvider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n  )\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}